;------------
;	LEGIONS GBC EDITION
;	by yuyat
;	tab 8

	INCLUDE "HARDWARE.INC"

;次のフレームのシーンを変更するマクロ
SetScene: MACRO
	ld	hl,\1
	ld	a,h
	ld	[b_SceneAdress],a
	ld	a,l
	ld	[b_SceneAdress + 1],a
	ENDM

AdressLD: MACRO
	ld	a,[\1]
	ld	h,a
	ld	a,[\1 + 1]
	ld	l,a
	ENDM

SECTION "CALL HL",ROM0[$18]
	jp			hl								;$18

SECTION "V Blank",ROM0[$40]
	call	vsync
	reti
SECTION "LCDC Status Interupt",ROM0[$48]
	call	LCDC
	reti
SECTION "Timer Interupt",ROM0[$50]
	reti
SECTION "Serial Interupt",ROM0[$58]
	reti
SECTION "Keypad Interupt",ROM0[$60]
	reti
SECTION "Org $100",ROM0[$100]
	nop							; 起動直後 SP=$FFFE
	jp		begin
	NINTENDO_LOGO          			         	; Nintendo graphic logo

;Rom Header Info
;				 123456789abcdef
	DB			"Legions GB"            	; Game Name
	DB			0,0,0,0,0               	; Padding to 15 characters
	DB			$80                     	; 0 - MGB / $80 - Color compatible /
	DB			0,0                     	; Game Maker Code
	DB			0                       	; Game Unit Code
	DB			CART_ROM_MBC5_RAM_BAT   	; Cart type
	DB			CART_ROM_32M            	; ROM Size (in bits)
	DB			CART_RAM_64K            	; RAM Size (in bits)
	DB			0,1                     	; Maker ID
	DB 			0                       	; Version=0
	DB 			$00                     	; Complement check (important)
	DW 			$0000                   	; Checksum (not important)

	SECTION "Main Code",ROM0[$150]
begin:
	di
	call	Initialize
	call	InitRand8
	;最初に呼び出すシーン
	SetScene	b_SetBattleStart
	call	ScreenOnVB
	ei
main:
	ldh	a,[rLY]
	cp	1
	jp	nc,main
	ld	a,[b_SceneAdress]
	ld	h,a
	ld	a,[b_SceneAdress + 1]
	ld	l,a
	call	nz,$0018					;jp [hl] になっている。実質 call [hl]
	halt
	jp	main

vsync:
	push	af
	push	bc
	push	de
	push	hl
	ld	a,[f_MainPhaseScene]
	cp	$F0
	jr	nz,.skip
	call	g_VBField
.skip:
	call	$FF80		;スプライト処理
	call	ReadButton
	pop	hl
	pop	de
	pop	bc
	pop	af
	ret

LCDC:
	ret

	;基本的な処理
	include	"_GRAPHIC.z80"
	include	"_GBroutine.z80"
	include	"_BattleRoutine.z80"	;フェイズ関係なく使う処理
	include	"_Field.z80"		;フィールド画面の処理
	;フェイズごとの処理
	include	"_BattleStart.z80"	;ゲーム開始時
	include	"_Start.z80"		;スタートフェイズ
	include	"_Draw.z80"		;ドローフェイズ
					;メインフェイズ
	include	"_FieldMenu.z80"	;-メニューの処理
	include "_UnitBattle.z80"	;-バトルの処理
	include	"_Zukan.z80"		;-図鑑画面
	include	"_End.z80"		;エンドフェイズ
	include "_BattleEnd.z80"	;ゲーム終了時
	;小物データ
	include	"d_DeckData.z80"	;デッキデータ


;--------------------------------------------------------------------------------------------------
SECTION "Battle RAM",SRAM[$A000],BANK[0]
;バトル用変数
;フェイズ管理
b_SceneAdress		dw		;現在のフレームで実行するアドレス
b_BackSceneAdress	dw		;戻る先のアドレス

b_TurnCount		db		;現在のターン数
b_HavingTurn		db		;手番の所有者（0で先攻 1で後攻）
b_PlayerTurn		db		;プレイヤーの先攻後攻（0で先攻 1で後攻）

SECTION "First Player RAM",SRAM[$A100],BANK[0]
;先攻プレイヤー
;領域管理
b_fDeck			ds	40 *  2	;先攻プレイヤーのデッキ

b_fHand			ds	40 *  2	;先攻プレイヤーの手札
					;2byte = カード番号

b_fTimeLine		ds	40 *  4	;先攻プレイヤーのタイムライン
					;2byte = カード番号
					;1byte = 位相
					;1byte = ウェイトゾーン番号
b_fStandby		ds	16 *  2	;先攻プレイヤーのスタンバイゾーン
					;2byte  = カード番号
					;1byte  = 位相
					;1byte  = ATK
					;1byte  = HP
					;10byte = キーワード
					;1byte  = 空きメモリ
b_fFieldUnit		ds	80 *  5 ;先攻フィールドユニット
					;マスター・ロード・左・中央・右ミニオンの順で並んでいる
					;2byte  = カード番号
					;1byte  = 位相
					;1byte  = ATK（ターン終了までのバフはここに代入する）
					;1byte  = HP（ターン終了までのバフはここに代入する）
					;10byte = キーワード（ターン終了までのバフはここに代入する）
					;1byte  = 常時効果のバフatk
					;1byte  = 常時効果のバフhp
					;10byte = 常時効果のキーワード
					;10byte = 常時効果の禁止キーワード
					;1byte  = 自ターン中のバフatk（相手ターン中効果は相手側の自ターン中効果として扱う）
					;1byte  = 自ターン中のバフhp（相手ターン中効果は相手側の自ターン中効果として扱う）
					;10byte = 自ターン中のキーワード（相手ターン中効果は相手側の自ターン中効果として扱う）
					;10byte = 自ターン中の禁止キーワード（相手ターン中効果は相手側の自ターン中効果として扱う）
					;1byte = 空きメモリ

b_fDeckTop		db		;先攻プレイヤーのデッキトップの位置
b_fHandCount		db		;先攻プレイヤーの手札の枚数

;コア管理
b_fActiveCore		db		;先攻活性コア
b_fCanUseCore		db		;先攻使用可能コア
b_fMasterCore		db		;先攻マスター上のコア
b_fCoreCost		db		;先攻ロード上のコア
b_fTotalCore		db		;先攻合計コア
b_fTLCore		ds	4	;先攻タイムライン上のコア

SECTION "Second Player RAM",SRAM[$A400],BANK[0]
;後攻プレイヤー
;領域管理
b_sDeck			ds	40 *  2	;後攻プレイヤーのデッキ
b_sHand			ds	40 *  2	;後攻プレイヤーの手札
b_sTimeLine		ds	40 *  4	;後攻プレイヤーのタイムライン
b_sStandby		ds	16 *  2	;後攻プレイヤーのスタンバイゾーン
b_sFieldUnit		ds	80 *  5 ;後攻フィールドユニット

b_sDeckTop		db		;後攻プレイヤーのデッキトップの位置
b_sHandCount		db		;後攻プレイヤーの手札の枚数

;コア管理
b_sActiveCore		db		;後攻活性コア
b_sCanUseCore		db		;後攻使用可能コア
b_sMasterCore		db		;後攻マスター上のコア
b_sCoreCost		db		;後攻ロード上のコア
b_sTotalCore		db		;後攻合計コア
b_sTLCore		ds	4	;先攻タイムライン上のコア

SECTION "Current Player RAM",SRAM[$A700],BANK[0]
;現在の自プレイヤーのアドレス・値
b_cDeck			dw		;現在の自プレイヤーのデッキのアドレス
b_cHand			dw		;現在の自プレイヤーの手札のアドレス
b_cTimeLine		dw		;現在の自プレイヤーのタイムラインのアドレス
b_cStandby		dw		;現在の自プレイヤーのスタンバイのアドレス
b_cFieldUnit		dw		;現在の自プレイヤーのフィールドユニットのアドレス

b_cDeckTop		dw		;現在の自プレイヤーのデッキトップのアドレス
b_cHandCount		dw		;現在の自プレイヤーの手札のアドレス
					;1バイトのデータの場合、処理前に値を転送する

SECTION "Opponent Player RAM",SRAM[$A780],BANK[0]
;現在の相手プレイヤーのアドレス・値
b_oDeck			dw		;現在の相手プレイヤーのデッキのアドレス
b_oHand			dw		;現在の相手プレイヤーの手札のアドレス
b_oTimeLine		dw		;現在の相手プレイヤーのタイムラインのアドレス
b_oStandby		dw		;現在の相手プレイヤーのスタンバイのアドレス
b_oFieldUnit		dw		;現在の相手プレイヤーのフィールドユニットのアドレス

b_oDeckTop		dw		;現在の相手プレイヤーのデッキトップのアドレス
b_oHandCount		dw		;現在の相手プレイヤーの手札のアドレス
					;1バイトのデータの場合、処理前に値を転送する

SECTION "Local Paramator RAM",SRAM[$A800],BANK[0]
;フィールド画面用領域
f_EnableInterrupt	db		;フィールド画面用割り込みの許可（1でon）
f_MainPhaseScene	db		;メインフェイズの画面状態
f_HandPosition		db		;現在選んでいる手札の位置
f_SelectCard		dw		;現在選んでいるカードの種類
f_SelectCommand		db		;現在選んでいるコマンドの種類

;フィールド選択関連
f_cSelectUnit		db		;選択した自ユニットの位置
					;0:マスター
					;1:ロード
					;2:左
					;3:中央
					;4:右ミニオン
f_oSelectUnit		db		;選択した相手ユニットの位置
f_cBattleUnit		db		;戦闘を行う自ユニットの位置
f_oBattleUnit		db		;戦闘を行う他ユニットの位置

;図鑑画面用領域
z_Position		db		;図鑑の表示する位置
z_Page			db		;効果テキスト枠のページ数

;--------------------------------------------------------------------------------------------------

SECTION "Work RAM",WRAM0[$C000]
;システム変数
_Pad			db		;ボタン入力  押されている間
_PadDebounce		db		;            押された瞬間
_Seed			db		;乱数のシード
_Rand			db

_Decimal		ds	5	;５桁１０進数ASCIIコード

SECTION "OAM RAM0",WRAM0[$C100]
OAM_BUFFER0	 	ds	160

SECTION "OAM RAM1",WRAM0[$C200]
OAM_BUFFER1		ds	160

SECTION "FieldTileMap RAM",WRAMX[$D000],BANK[1]
FIELDMAP_BUFFER		ds	32 * 10
MENUMAP_BUFFER		ds	32 * 8
FIELDATRMAP_BUFFER	ds	32 * 10
MENUATRMAP_BUFFER	ds	32 * 8


;--------------------------------------------------------------------------------------------------
SECTION "HI-RAM",HRAM[$FF80]
SPRITE_ROUTINE0			ds	SpriteRoutineEnd0 - SpriteRoutine0
SPRITE_ROUTINE1			ds	SpriteRoutineEnd1 - SpriteRoutine1
FIELD_PALLETE			ds	48

SECTION "COMMON GRAPHICS",ROMX[$4000],BANK[1]
;グラフィックデータ
;共通グラフィック
	include "g_common.Z80"		;共通グラフィックデータ
	include "g_sprite.Z80"		;共通スプライト

;フィールド用グラフィック
	include "g_field.Z80"
	include "g_menu.Z80"
	include "g_end.Z80"

;図鑑用グラフィック
	include "g_zukan.Z80"		;図鑑モード用グラフィック
	include "g_moji.Z80"		;図鑑で表示を行う文字（表示確認用）
	
	include "g_cg123.Z80"		;カード画像用グラフィック
	include "g_mg123.Z80"		;ミニキャラ用グラフィック
	include "g_cg123_map.Z80"	;カード画像用マップ
	include "g_mg123_map.Z80"	;ミニキャラ用マップ

SECTION "CARD DATA",ROMX[$4000],BANK[2]
;カードデータ
	include "d_CardData.z80"